// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	apiauthorizationv1 "github.com/openshift/api/authorization/v1"
	internal "github.com/openshift/client-go/authorization/applyconfigurations/internal"
	runtime "k8s.io/apimachinery/pkg/runtime"
	managedfields "k8s.io/apimachinery/pkg/util/managedfields"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// LocalResourceAccessReviewApplyConfiguration represents an declarative configuration of the LocalResourceAccessReview type for use
// with apply.
type LocalResourceAccessReviewApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration `json:",inline"`
	ActionApplyConfiguration      `json:",inline"`
}

// LocalResourceAccessReview constructs an declarative configuration of the LocalResourceAccessReview type for use with
// apply.
func LocalResourceAccessReview(name string) *LocalResourceAccessReviewApplyConfiguration {
	b := &LocalResourceAccessReviewApplyConfiguration{}
	b.WithKind("LocalResourceAccessReview")
	b.WithAPIVersion("authorization.openshift.io/v1")
	return b
}

// ExtractLocalResourceAccessReview extracts the applied configuration owned by fieldManager from
// localResourceAccessReview. If no managedFields are found in localResourceAccessReview for fieldManager, a
// LocalResourceAccessReviewApplyConfiguration is returned with only the Name, Namespace (if applicable),
// APIVersion and Kind populated. It is possible that no managed fields were found for because other
// field managers have taken ownership of all the fields previously owned by fieldManager, or because
// the fieldManager never owned fields any fields.
// localResourceAccessReview must be a unmodified LocalResourceAccessReview API object that was retrieved from the Kubernetes API.
// ExtractLocalResourceAccessReview provides a way to perform a extract/modify-in-place/apply workflow.
// Note that an extracted apply configuration will contain fewer fields than what the fieldManager previously
// applied if another fieldManager has updated or force applied any of the previously applied fields.
// Experimental!
func ExtractLocalResourceAccessReview(localResourceAccessReview *apiauthorizationv1.LocalResourceAccessReview, fieldManager string) (*LocalResourceAccessReviewApplyConfiguration, error) {
	return extractLocalResourceAccessReview(localResourceAccessReview, fieldManager, "")
}

// ExtractLocalResourceAccessReviewStatus is the same as ExtractLocalResourceAccessReview except
// that it extracts the status subresource applied configuration.
// Experimental!
func ExtractLocalResourceAccessReviewStatus(localResourceAccessReview *apiauthorizationv1.LocalResourceAccessReview, fieldManager string) (*LocalResourceAccessReviewApplyConfiguration, error) {
	return extractLocalResourceAccessReview(localResourceAccessReview, fieldManager, "status")
}

func extractLocalResourceAccessReview(localResourceAccessReview *apiauthorizationv1.LocalResourceAccessReview, fieldManager string, subresource string) (*LocalResourceAccessReviewApplyConfiguration, error) {
	b := &LocalResourceAccessReviewApplyConfiguration{}
	err := managedfields.ExtractInto(localResourceAccessReview, internal.Parser().Type("com.github.openshift.api.authorization.v1.LocalResourceAccessReview"), fieldManager, b, subresource)
	if err != nil {
		return nil, err
	}

	b.WithKind("LocalResourceAccessReview")
	b.WithAPIVersion("authorization.openshift.io/v1")
	return b, nil
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithKind(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.Kind = &value
	return b
}

// WithAPIVersion sets the APIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIVersion field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithAPIVersion(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.APIVersion = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithNamespace(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithVerb sets the Verb field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Verb field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithVerb(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.Verb = &value
	return b
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithGroup(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.Group = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithVersion(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.Version = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithResource(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.Resource = &value
	return b
}

// WithResourceName sets the ResourceName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceName field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithResourceName(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.ResourceName = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithPath(value string) *LocalResourceAccessReviewApplyConfiguration {
	b.Path = &value
	return b
}

// WithIsNonResourceURL sets the IsNonResourceURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IsNonResourceURL field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithIsNonResourceURL(value bool) *LocalResourceAccessReviewApplyConfiguration {
	b.IsNonResourceURL = &value
	return b
}

// WithContent sets the Content field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Content field is set to the value of the last call.
func (b *LocalResourceAccessReviewApplyConfiguration) WithContent(value runtime.RawExtension) *LocalResourceAccessReviewApplyConfiguration {
	b.Content = &value
	return b
}
