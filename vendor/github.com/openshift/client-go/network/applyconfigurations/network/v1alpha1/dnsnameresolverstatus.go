// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// DNSNameResolverStatusApplyConfiguration represents an declarative configuration of the DNSNameResolverStatus type for use
// with apply.
type DNSNameResolverStatusApplyConfiguration struct {
	ResolvedNames []DNSNameResolverResolvedNameApplyConfiguration `json:"resolvedNames,omitempty"`
}

// DNSNameResolverStatusApplyConfiguration constructs an declarative configuration of the DNSNameResolverStatus type for use with
// apply.
func DNSNameResolverStatus() *DNSNameResolverStatusApplyConfiguration {
	return &DNSNameResolverStatusApplyConfiguration{}
}

// WithResolvedNames adds the given value to the ResolvedNames field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ResolvedNames field.
func (b *DNSNameResolverStatusApplyConfiguration) WithResolvedNames(values ...*DNSNameResolverResolvedNameApplyConfiguration) *DNSNameResolverStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithResolvedNames")
		}
		b.ResolvedNames = append(b.ResolvedNames, *values[i])
	}
	return b
}
