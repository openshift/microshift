kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-snapshot-webhook
  namespace: openshift-storage
spec:
  serviceName: "csi-snapshot-webhook"
  selector:
    matchLabels:
      app: csi-snapshot-webhook
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: csi-snapshot-webhook
    spec:
      serviceAccount: csi-snapshot-controller # TODO: create dedicated service account
      containers:
      - name: webhook
        image: {{ .ReleaseImage.csi_snapshot_validation_webhook }}
        #image: quay.io/openshift/origin-csi-snapshot-validation-webhook:4.12.0
        args:
          - --tls-cert-file=/etc/snapshot-validation-webhook/certs/tls.crt
          - --tls-private-key-file=/etc/snapshot-validation-webhook/certs/tls.key
          - "--v=1"
          - --port=8443
        ports:
        - containerPort: 8443
        volumeMounts:
          - name: certs
            mountPath: /etc/snapshot-validation-webhook/certs
            readOnly: true
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: csi-snapshot-webhook
                topologyKey: kubernetes.io/hostname
      priorityClassName: "system-cluster-critical"
      restartPolicy: Always
      nodeSelector:
        node-role.kubernetes.io/master: ""
      volumes:
      - name: certs
        secret:
          secretName: csi-snapshot-webhook-secret
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: "NoSchedule"
