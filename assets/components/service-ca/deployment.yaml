apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: openshift-service-ca
  name: service-ca
  labels:
    app: service-ca
    service-ca: "true"
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: service-ca
      service-ca: "true"
  template:
    metadata:
      name: service-ca
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: service-ca
        service-ca: "true"
    spec:
      serviceAccountName: service-ca
      containers:
        - name: service-ca-controller
          image: '{{ .ReleaseImage.service_ca_operator }}'
          imagePullPolicy: IfNotPresent
          command: ["service-ca-operator", "controller"]
          ports:
            - containerPort: 8443
          securityContext:
            runAsNonRoot: true
          resources:
            requests:
              memory: 120Mi
              cpu: 10m
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/secrets/signing-key
              name: signing-key
            - mountPath: /var/run/configmaps/signing-cabundle
              name: signing-cabundle
          args:
            - -v=2
      volumes:
        - name: signing-key
          secret:
            secretName: '{{.TLSSecret}}'
        - name: signing-cabundle
          configMap:
            name: '{{.CAConfigMap}}'
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: "system-cluster-critical"
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: "NoSchedule"
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 120
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 120
  replicas: 1
