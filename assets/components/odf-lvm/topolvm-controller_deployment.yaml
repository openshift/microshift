apiVersion: apps/v1
kind: Deployment
metadata:
  name: topolvm-controller
  namespace: openshift-storage
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: topolvm-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: topolvm-controller
      name: topolvm-controller
      namespace: openshift-storage
    spec:
      containers:
      - command:
        - /topolvm-controller
        - --cert-dir=/certs
        image: {{ .ReleaseImage.odf_topolvm }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 3
        name: topolvm-controller
        ports:
        - containerPort: 9808
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/topolvm
          name: socket-dir
        - mountPath: /certs
          name: certs
      - args:
        - --csi-address=/run/topolvm/csi-topolvm.sock
        - --enable-capacity
        - --capacity-ownerref-level=2
        - --capacity-poll-interval=30s
        - --feature-gates=Topology=true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ .ReleaseImage.ose_csi_ext_provisioner }}
        imagePullPolicy: IfNotPresent
        name: csi-provisioner
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/topolvm
          name: socket-dir
      - args:
        - --csi-address=/run/topolvm/csi-topolvm.sock
        image: {{ .ReleaseImage.ose_csi_ext_resizer }}
        imagePullPolicy: IfNotPresent
        name: csi-resizer
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/topolvm
          name: socket-dir
      - args:
        - --csi-address=/run/topolvm/csi-topolvm.sock
        image: {{ .ReleaseImage.ose_csi_livenessprobe }}
        imagePullPolicy: IfNotPresent
        name: liveness-probe
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/topolvm
          name: socket-dir
      - args:
        - --csi-address=/run/topolvm/csi-topolvm.sock
        - --leader-election
        - --leader-election-namespace=openshift-storage
        image: {{ .ReleaseImage.ose_csi_ext_snapshotter }}
        imagePullPolicy: IfNotPresent
        name: csi-snapshotter
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/topolvm
          name: socket-dir
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /usr/bin/bash
        - -c
        - openssl req -nodes -x509 -newkey rsa:4096 -subj '/DC=self_signed_certificate'
          -keyout /certs/tls.key -out /certs/tls.crt -days 3650
        image: {{ .ReleaseImage.openssl }}
        imagePullPolicy: IfNotPresent
        name: self-signed-cert-generator
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /certs
          name: certs
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: topolvm-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: socket-dir
      - emptyDir: {}
        name: certs
