kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: multus
  namespace: openshift-multus
  annotations:
    kubernetes.io/description: |
      This daemonset launches the Multus networking component on each node.
spec:
  selector:
    matchLabels:
      app: multus
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: multus
        component: network
        type: infra
        openshift.io/component: network
        kubernetes.io/os: "linux"
    spec:
      serviceAccountName: multus
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: "system-node-critical"
      tolerations:
      - operator: Exists
      initContainers:
      - name: install-container-network-plugins
        image: container-networking-plugins
        imagePullPolicy: IfNotPresent
        command: [ "/bin/bash", "-ec", "--" ]
        args:
          - >
            /entrypoint/cnibincopy.sh;
        volumeMounts:
        - name: cnibin
          mountPath: /host/opt/cni/bin
        - mountPath: /entrypoint
          name: cni-binary-copy
        env:
        - name: DEFAULT_SOURCE_DIRECTORY
          # TODO: Change when microshift-specific multus image is ready
          value: "/usr/src/plugins/rhel9/bin/"
        - name: BINARIES_TO_COPY
          value: "{bridge,ipvlan,macvlan,static,dhcp,host-local}"
      containers:
      - name: kube-multus
        image: multus-cni
        imagePullPolicy: IfNotPresent
        command: [ "/bin/bash", "-ec", "--" ]
        args:
          - >
            /entrypoint/cnibincopy.sh;
            exec /usr/src/multus-cni/bin/thin_entrypoint
            --multus-conf-file=auto
            --multus-autoconfig-dir=/host/etc/cni/net.d
            --readiness-indicator-file=/etc/cni/net.d/10-ovn-kubernetes.conf
            --cleanup-config-on-exit=true
            --skip-multus-binary-copy=true
        resources:
          requests:
            cpu: 10m
            memory: 65Mi
        securityContext:
          privileged: true
        lifecycle:
          preStop:
            exec:
              # Following doesn't work too well until multus daemonset
              # starts to sleep between config/kubeconfig checks as
              # these files might get recreated before thin_entrypoint exits.
              #
              # preStop hook can't access `env` so plugins are directly hardcoded.
              command:
              - "/bin/bash"
              - "-c"
              - >
                rm -vf /host/etc/cni/net.d/00-multus.conf* > /proc/1/fd/1 2>&1;
                rm -vf /host/opt/cni/bin/multus > /proc/1/fd/1 2>&1;
                rm -vfr /host/etc/cni/net.d/multus.d > /proc/1/fd/1 2>&1;
                rm -vf /host/opt/cni/bin/{bridge,ipvlan,macvlan,static,dhcp,host-local} > /proc/1/fd/1 2>&1;
        volumeMounts:
        - mountPath: /entrypoint
          name: cni-binary-copy
        - name: system-cni-dir
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        env:
        - name: DEFAULT_SOURCE_DIRECTORY
          # TODO: Change when microshift-specific multus image is ready
          value: "/usr/src/multus-cni/rhel9/bin/"
        - name: BINARIES_TO_COPY
          value: "multus"
      terminationGracePeriodSeconds: 10
      volumes:
        - name: system-cni-dir
          hostPath:
            path: "/etc/cni/net.d"
            type: Directory
        - name: cnibin
          hostPath:
            path: "/opt/cni/bin"
            type: Directory
        - name: cni-binary-copy
          configMap:
            name: cni-copy-resources
            defaultMode: 0744
