# This is a MicroShift specific kserve configuration.
# For RHOAI kserve configuration see: assets/optional/ai-model-serving/kserve/overlays/odh/inferenceservice-config-patch.yaml
# For upstream kserve configuration and description of the config see: assets/optional/ai-model-serving/kserve/configmap/inferenceservice.yaml
#
# The difference compared to RHOAI's kserve configuration is the 'deploy' section setting:
# 'defaultDeploymentMode' set to 'RawDeployment'.
#
# The ingress (istio) is disabled (just like RHOAI, unlike the upstream).
apiVersion: v1
kind: ConfigMap
metadata:
  name: inferenceservice-config
  namespace: kserve
data:
  explainers: "{}"
  oauthProxy: |- 
    {
      "image" : "$(oauth-proxy)",
      "memoryRequest": "64Mi",
      "memoryLimit": "128Mi",
      "cpuRequest": "100m",
      "cpuLimit": "200m"
    }
  storageInitializer: |-
    {
        "image" : "$(kserve-storage-initializer)",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "enableDirectPvcVolumeMount": true,
        "enableModelcar": true
    }
  ingress: |-
    {
        "ingressGateway" : "knative-serving/knative-ingress-gateway",
        "knativeLocalGatewayService" : "knative-local-gateway.istio-system.svc.cluster.local",
        "ingressService" : "istio-ingressgateway.istio-system.svc.cluster.local",
        "localGateway" : "istio-system/kserve-local-gateway",
        "localGatewayService" : "kserve-local-gateway.istio-system.svc.cluster.local",
        "ingressDomain"  : "example.com",
        "ingressClassName" : "istio",
        "domainTemplate": "{{ .Name }}-{{ .Namespace }}.{{ .IngressDomain }}",
        "urlScheme": "https",
        "disableIstioVirtualHost": false, 
        "disableIngressCreation": true
    }
  logger: |-
    {
        "image" : "$(kserve-agent)",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "defaultUrl": "http://default-broker"
    }
  batcher: |-
    {
        "image" : "$(kserve-agent)",
        "memoryRequest": "1Gi",
        "memoryLimit": "1Gi",
        "cpuRequest": "1",
        "cpuLimit": "1"
    }
  agent: |-
    {
        "image" : "$(kserve-agent)",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1"
    }
  router: |-
    {
        "image" : "$(kserve-router)",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "headers": {
          "propagate": [
            "Authorization"
          ]
        }
    }
  deploy: |-
    {
      "defaultDeploymentMode": "RawDeployment"
    }
  metricsAggregator: |-
    {
      "enableMetricAggregation": "false",
      "enablePrometheusScraping" : "false"
    }
