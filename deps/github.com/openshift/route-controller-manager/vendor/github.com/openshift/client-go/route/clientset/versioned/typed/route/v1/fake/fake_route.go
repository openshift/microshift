// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/route/v1"
	routev1 "github.com/openshift/client-go/route/applyconfigurations/route/v1"
	typedroutev1 "github.com/openshift/client-go/route/clientset/versioned/typed/route/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeRoutes implements RouteInterface
type fakeRoutes struct {
	*gentype.FakeClientWithListAndApply[*v1.Route, *v1.RouteList, *routev1.RouteApplyConfiguration]
	Fake *FakeRouteV1
}

func newFakeRoutes(fake *FakeRouteV1, namespace string) typedroutev1.RouteInterface {
	return &fakeRoutes{
		gentype.NewFakeClientWithListAndApply[*v1.Route, *v1.RouteList, *routev1.RouteApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("routes"),
			v1.SchemeGroupVersion.WithKind("Route"),
			func() *v1.Route { return &v1.Route{} },
			func() *v1.RouteList { return &v1.RouteList{} },
			func(dst, src *v1.RouteList) { dst.ListMeta = src.ListMeta },
			func(list *v1.RouteList) []*v1.Route { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.RouteList, items []*v1.Route) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
