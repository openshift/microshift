// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	templatev1 "github.com/openshift/api/template/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// TemplateLister helps list Templates.
// All objects returned here must be treated as read-only.
type TemplateLister interface {
	// List lists all Templates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*templatev1.Template, err error)
	// Templates returns an object that can list and get Templates.
	Templates(namespace string) TemplateNamespaceLister
	TemplateListerExpansion
}

// templateLister implements the TemplateLister interface.
type templateLister struct {
	listers.ResourceIndexer[*templatev1.Template]
}

// NewTemplateLister returns a new TemplateLister.
func NewTemplateLister(indexer cache.Indexer) TemplateLister {
	return &templateLister{listers.New[*templatev1.Template](indexer, templatev1.Resource("template"))}
}

// Templates returns an object that can list and get Templates.
func (s *templateLister) Templates(namespace string) TemplateNamespaceLister {
	return templateNamespaceLister{listers.NewNamespaced[*templatev1.Template](s.ResourceIndexer, namespace)}
}

// TemplateNamespaceLister helps list and get Templates.
// All objects returned here must be treated as read-only.
type TemplateNamespaceLister interface {
	// List lists all Templates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*templatev1.Template, err error)
	// Get retrieves the Template from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*templatev1.Template, error)
	TemplateNamespaceListerExpansion
}

// templateNamespaceLister implements the TemplateNamespaceLister
// interface.
type templateNamespaceLister struct {
	listers.ResourceIndexer[*templatev1.Template]
}
