// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	buildv1 "github.com/openshift/api/build/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// BuildLister helps list Builds.
// All objects returned here must be treated as read-only.
type BuildLister interface {
	// List lists all Builds in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*buildv1.Build, err error)
	// Builds returns an object that can list and get Builds.
	Builds(namespace string) BuildNamespaceLister
	BuildListerExpansion
}

// buildLister implements the BuildLister interface.
type buildLister struct {
	listers.ResourceIndexer[*buildv1.Build]
}

// NewBuildLister returns a new BuildLister.
func NewBuildLister(indexer cache.Indexer) BuildLister {
	return &buildLister{listers.New[*buildv1.Build](indexer, buildv1.Resource("build"))}
}

// Builds returns an object that can list and get Builds.
func (s *buildLister) Builds(namespace string) BuildNamespaceLister {
	return buildNamespaceLister{listers.NewNamespaced[*buildv1.Build](s.ResourceIndexer, namespace)}
}

// BuildNamespaceLister helps list and get Builds.
// All objects returned here must be treated as read-only.
type BuildNamespaceLister interface {
	// List lists all Builds in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*buildv1.Build, err error)
	// Get retrieves the Build from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*buildv1.Build, error)
	BuildNamespaceListerExpansion
}

// buildNamespaceLister implements the BuildNamespaceLister
// interface.
type buildNamespaceLister struct {
	listers.ResourceIndexer[*buildv1.Build]
}
