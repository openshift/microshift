// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/user/v1"
	userv1 "github.com/openshift/client-go/user/applyconfigurations/user/v1"
	typeduserv1 "github.com/openshift/client-go/user/clientset/versioned/typed/user/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeIdentities implements IdentityInterface
type fakeIdentities struct {
	*gentype.FakeClientWithListAndApply[*v1.Identity, *v1.IdentityList, *userv1.IdentityApplyConfiguration]
	Fake *FakeUserV1
}

func newFakeIdentities(fake *FakeUserV1) typeduserv1.IdentityInterface {
	return &fakeIdentities{
		gentype.NewFakeClientWithListAndApply[*v1.Identity, *v1.IdentityList, *userv1.IdentityApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("identities"),
			v1.SchemeGroupVersion.WithKind("Identity"),
			func() *v1.Identity { return &v1.Identity{} },
			func() *v1.IdentityList { return &v1.IdentityList{} },
			func(dst, src *v1.IdentityList) { dst.ListMeta = src.ListMeta },
			func(list *v1.IdentityList) []*v1.Identity { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.IdentityList, items []*v1.Identity) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
