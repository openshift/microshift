// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/authorization/v1"
	authorizationv1 "github.com/openshift/client-go/authorization/applyconfigurations/authorization/v1"
	typedauthorizationv1 "github.com/openshift/client-go/authorization/clientset/versioned/typed/authorization/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeRoles implements RoleInterface
type fakeRoles struct {
	*gentype.FakeClientWithListAndApply[*v1.Role, *v1.RoleList, *authorizationv1.RoleApplyConfiguration]
	Fake *FakeAuthorizationV1
}

func newFakeRoles(fake *FakeAuthorizationV1, namespace string) typedauthorizationv1.RoleInterface {
	return &fakeRoles{
		gentype.NewFakeClientWithListAndApply[*v1.Role, *v1.RoleList, *authorizationv1.RoleApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("roles"),
			v1.SchemeGroupVersion.WithKind("Role"),
			func() *v1.Role { return &v1.Role{} },
			func() *v1.RoleList { return &v1.RoleList{} },
			func(dst, src *v1.RoleList) { dst.ListMeta = src.ListMeta },
			func(list *v1.RoleList) []*v1.Role { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.RoleList, items []*v1.Role) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
