// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/user/v1"
	userv1 "github.com/openshift/client-go/user/applyconfigurations/user/v1"
	typeduserv1 "github.com/openshift/client-go/user/clientset/versioned/typed/user/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeGroups implements GroupInterface
type fakeGroups struct {
	*gentype.FakeClientWithListAndApply[*v1.Group, *v1.GroupList, *userv1.GroupApplyConfiguration]
	Fake *FakeUserV1
}

func newFakeGroups(fake *FakeUserV1) typeduserv1.GroupInterface {
	return &fakeGroups{
		gentype.NewFakeClientWithListAndApply[*v1.Group, *v1.GroupList, *userv1.GroupApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("groups"),
			v1.SchemeGroupVersion.WithKind("Group"),
			func() *v1.Group { return &v1.Group{} },
			func() *v1.GroupList { return &v1.GroupList{} },
			func(dst, src *v1.GroupList) { dst.ListMeta = src.ListMeta },
			func(list *v1.GroupList) []*v1.Group { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.GroupList, items []*v1.Group) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
