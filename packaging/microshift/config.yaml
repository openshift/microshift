apiServer:
    # Kube apiserver advertise address to work around the certificates issue
    # when requiring external access using the node IP. This will turn into
    # the IP configured in the endpoint slice for kubernetes service. Must be
    # a reachable IP from pods. Defaults to service network CIDR first
    # address.
    advertiseAddress: ""
    auditLog:
        # maxFileAge is the maximum number of days to retain old audit log files
        maxFileAge: 0
        # maxFileSize is the maximum size in megabytes of the audit log file before it gets rotated
        maxFileSize: 200
        # maxFiles is the maximum number of rotated audit log files to retain
        maxFiles: 10
        # profile is the OpenShift profile specifying a specific logging policy
        profile: Default
    # List of custom certificates used to secure requests to specific host names
    namedCertificates:
        - certPath: ""
          keyPath: ""
          names: []
    # SubjectAltNames added to API server certs
    subjectAltNames: []
debugging:
    # Valid values are: "Normal", "Debug", "Trace", "TraceAll".
    # Defaults to "Normal".
    logLevel: Normal
dns:
    # baseDomain is the base domain of the cluster. All managed DNS records will
    # be sub-domains of this base.
    #
    # For example, given the base domain `example.com`, router exposed
    # domains will be formed as `*.apps.example.com` by default,
    # and API service will have a DNS entry for `api.example.com`,
    # as well as "api-int.example.com" for internal k8s API access.
    #
    # Once set, this field cannot be changed.
    # example:
    #   microshift.example.com
    baseDomain: example.com
etcd:
    # Set a memory limit on the etcd process; etcd will begin paging
    # memory when it gets to this value. 0 means no limit.
    memoryLimitMB: 0
ingress:
    # Determines default http version should be used for the ingress backends
    # By default,  using version 1.
    defaultHTTPVersion: 1
    # forwardedHeaderPolicy specifies when and how ingress router
    # sets the Forwarded, X-Forwarded-For, X-Forwarded-Host,
    # X-Forwarded-Port, X-Forwarded-Proto, and X-Forwarded-Proto-Version
    # HTTP headers.  The value may be one of the following:
    #
    # * "Append", which specifies that ingress router appends the
    #   headers, preserving existing headers.
    #
    # * "Replace", which specifies that ingress router sets the
    #   headers, replacing any existing Forwarded or X-Forwarded-* headers.
    #
    # * "IfNone", which specifies that ingress router sets the
    #   headers if they are not already set.
    #
    # * "Never", which specifies that ingress router never sets the
    #   headers, preserving any existing headers.
    #
    # By default, the policy is "Append".
    forwardedHeaderPolicy: ""
    # httpCompression defines a policy for HTTP traffic compression.
    # By default, there is no HTTP compression.
    httpCompression:
        # mimeTypes is a list of MIME types that should have compression applied.
        # This list can be empty, in which case the ingress controller does not apply compression.
        #
        # Note: Not all MIME types benefit from compression, but HAProxy will still use resources
        # to try to compress if instructed to.  Generally speaking, text (html, css, js, etc.)
        # formats benefit from compression, but formats that are already compressed (image,
        # audio, video, etc.) benefit little in exchange for the time and cpu spent on compressing
        # again. See https://joehonton.medium.com/the-gzip-penalty-d31bd697f1a2
        mimeTypes: []
    # httpEmptyRequestsPolicy describes how HTTP connections should be
    # handled if the connection times out before a request is received.
    # Allowed values for this field are "Respond" and "Ignore".  If the
    # field is set to "Respond", the ingress controller sends an HTTP 400
    # or 408 response, logs the connection (if access logging is enabled),
    # and counts the connection in the appropriate metrics.  If the field
    # is set to "Ignore", the ingress controller closes the connection
    # without sending a response, logging the connection, or incrementing
    # metrics.  The default value is "Respond".
    #
    # Typically, these connections come from load balancers' health probes
    # or Web browsers' speculative connections ("preconnect") and can be
    # safely ignored.  However, these requests may also be caused by
    # network errors, and so setting this field to "Ignore" may impede
    # detection and diagnosis of problems.  In addition, these requests may
    # be caused by port scans, in which case logging empty requests may aid
    # in detecting intrusion attempts.
    httpEmptyRequestsPolicy: Respond
    # List of IP addresses and NIC names where the router will be listening. The NIC
    # names get translated to all their configured IPs dynamically. Defaults to the
    # configured IPs in the host at MicroShift start.
    listenAddress: []
    # logEmptyRequests specifies how connections on which no request is
    # received should be logged.  Typically, these empty requests come from
    # load balancers' health probes or Web browsers' speculative
    # connections ("preconnect"), in which case logging these requests may
    # be undesirable.  However, these requests may also be caused by
    # network errors, in which case logging empty requests may be useful
    # for diagnosing the errors.  In addition, these requests may be caused
    # by port scans, in which case logging empty requests may aid in
    # detecting intrusion attempts.  Allowed values for this field are
    # "Log" and "Ignore".  The default value is "Log".
    logEmptyRequests: Log
    ports:
        # Default router http port. Must be in range 1-65535.
        http: 80
        # Default router https port. Must be in range 1-65535.
        https: 443
    routeAdmissionPolicy:
        # Describes how host name claims across namespaces should be handled.
        #
        # Value must be one of:
        #
        # - Strict: Do not allow routes in different namespaces to claim the same host.
        #
        # - InterNamespaceAllowed: Allow routes to claim different paths of the same
        #   host name across namespaces.
        #
        # If empty, the default is InterNamespaceAllowed.
        namespaceOwnership: InterNamespaceAllowed
    # Default router status, can be Managed or Removed.
    status: Managed
    # IngressControllerTuningOptions specifies options for tuning the performance
    # of ingress controller pods
    tuningOptions:
        # clientFinTimeout defines how long a connection will be held open while
        # waiting for the client response to the server/backend closing the
        # connection.
        #
        # If unset, the default timeout is 1s
        clientFinTimeout: 1s
        # clientTimeout defines how long a connection will be held open while
        # waiting for a client response.
        #
        # If unset, the default timeout is 30s
        clientTimeout: 30s
        # headerBufferBytes describes how much memory should be reserved
        # (in bytes) for IngressController connection sessions.
        # Note that this value must be at least 16384 if HTTP/2 is
        # enabled for the IngressController (https://tools.ietf.org/html/rfc7540).
        # If this field is empty, the IngressController will use a default value
        # of 32768 bytes.
        #
        # Setting this field is generally not recommended as headerBufferBytes
        # values that are too small may break the IngressController and
        # headerBufferBytes values that are too large could cause the
        # IngressController to use significantly more memory than necessary.
        headerBufferBytes: 0
        # headerBufferMaxRewriteBytes describes how much memory should be reserved
        # (in bytes) from headerBufferBytes for HTTP header rewriting
        # and appending for IngressController connection sessions.
        # Note that incoming HTTP requests will be limited to
        # (headerBufferBytes - headerBufferMaxRewriteBytes) bytes, meaning
        # headerBufferBytes must be greater than headerBufferMaxRewriteBytes.
        # If this field is empty, the IngressController will use a default value
        # of 8192 bytes.
        #
        # Setting this field is generally not recommended as
        # headerBufferMaxRewriteBytes values that are too small may break the
        # IngressController and headerBufferMaxRewriteBytes values that are too
        # large could cause the IngressController to use significantly more memory
        # than necessary.
        headerBufferMaxRewriteBytes: 0
        # healthCheckInterval defines how long the router waits between two consecutive
        # health checks on its configured backends.  This value is applied globally as
        # a default for all routes, but may be overridden per-route by the route annotation
        # "router.openshift.io/haproxy.health.check.interval".
        #
        # Expects an unsigned duration string of decimal numbers, each with optional
        # fraction and a unit suffix, eg "300ms", "1.5h" or "2h45m".
        # Valid time units are "ns", "us" (or "µs" U+00B5 or "μs" U+03BC), "ms", "s", "m", "h".
        #
        # Setting this to less than 5s can cause excess traffic due to too frequent
        # TCP health checks and accompanying SYN packet storms.  Alternatively, setting
        # this too high can result in increased latency, due to backend servers that are no
        # longer available, but haven't yet been detected as such.
        #
        # An empty or zero healthCheckInterval means no opinion and IngressController chooses
        # a default, which is subject to change over time.
        # Currently the default healthCheckInterval value is 5s.
        #
        # Currently the minimum allowed value is 1s and the maximum allowed value is
        # 2147483647ms (24.85 days).  Both are subject to change over time.
        healthCheckInterval: 5s
        # maxConnections defines the maximum number of simultaneous
        # connections that can be established per HAProxy process.
        # Increasing this value allows each ingress controller pod to
        # handle more connections but at the cost of additional
        # system resources being consumed.
        #
        # Permitted values are: empty, 0, -1, and the range
        # 2000-2000000.
        #
        # If this field is empty or 0, the IngressController will use
        # the default value of 50000, but the default is subject to
        # change in future releases.
        #
        # If the value is -1 then HAProxy will dynamically compute a
        # maximum value based on the available ulimits in the running
        # container. Selecting -1 (i.e., auto) will result in a large
        # value being computed (~520000 on OpenShift >=4.10 clusters)
        # and therefore each HAProxy process will incur significant
        # memory usage compared to the current default of 50000.
        #
        # Setting a value that is greater than the current operating
        # system limit will prevent the HAProxy process from
        # starting.
        #
        # If you choose a discrete value (e.g., 750000) and the
        # router pod is migrated to a new node, there's no guarantee
        # that that new node has identical ulimits configured. In
        # such a scenario the pod would fail to start. If you have
        # nodes with different ulimits configured (e.g., different
        # tuned profiles) and you choose a discrete value then the
        # guidance is to use -1 and let the value be computed
        # dynamically at runtime.
        #
        # You can monitor memory usage for router containers with the
        # following metric:
        # 'container_memory_working_set_bytes{container="router",namespace="openshift-ingress"}'.
        #
        # You can monitor memory usage of individual HAProxy
        # processes in router containers with the following metric:
        # 'container_memory_working_set_bytes{container="router",namespace="openshift-ingress"}/container_processes{container="router",namespace="openshift-ingress"}'.
        maxConnections: 0
        # serverFinTimeout defines how long a connection will be held open while
        # waiting for the server/backend response to the client closing the
        # connection.
        #
        # If unset, the default timeout is 1s
        serverFinTimeout: 1s
        # serverTimeout defines how long a connection will be held open while
        # waiting for a server/backend response.
        #
        # If unset, the default timeout is 30s
        serverTimeout: 30s
        # threadCount defines the number of threads created per HAProxy process.
        # Creating more threads allows each ingress controller pod to handle more
        # connections, at the cost of more system resources being used. HAProxy
        # currently supports up to 64 threads. If this field is empty, the
        # IngressController will use the default value.  The current default is 4
        # threads, but this may change in future releases.
        #
        # Setting this field is generally not recommended. Increasing the number
        # of HAProxy threads allows ingress controller pods to utilize more CPU
        # time under load, potentially starving other pods if set too high.
        # Reducing the number of threads may cause the ingress controller to
        # perform poorly.
        threadCount: 0
        # tlsInspectDelay defines how long the router can hold data to find a
        # matching route.
        #
        # Setting this too short can cause the router to fall back to the default
        # certificate for edge-terminated or reencrypt routes even when a better
        # matching certificate could be used.
        #
        # If unset, the default inspect delay is 5s
        tlsInspectDelay: 5s
        # tunnelTimeout defines how long a tunnel connection (including
        # websockets) will be held open while the tunnel is idle.
        #
        # If unset, the default timeout is 1h
        tunnelTimeout: 1h
# Settings specified in this section are transferred as-is into the Kubelet config.
kubelet:
manifests:
    # The locations on the filesystem to scan for kustomization
    # files to use to load manifests. Set to a list of paths to scan
    # only those paths. Set to an empty list to disable loading
    # manifests. The entries in the list can be glob patterns to
    # match multiple subdirectories.
    kustomizePaths:
        - /usr/lib/microshift/manifests
        - /usr/lib/microshift/manifests.d/*
        - /etc/microshift/manifests
        - /etc/microshift/manifests.d/*
network:
    # IP address pool to use for pod IPs.
    # This field is immutable after installation.
    clusterNetwork:
        - 10.42.0.0/16
    # CNIPlugin is a user defined string value matching one of the above CNI values. MicroShift uses this
    # value to decide whether to deploy the OVN-K as default CNI. An unset field defaults to "" during yaml parsing, and thus
    # could mean that the cluster has been upgraded. In order to support the existing out-of-box behavior, MicroShift
    # assumes an empty string to mean the OVN-K should be deployed.
    # Allowed values are: unset or one of ["", "ovnk", "none"]
    cniPlugin: ""
    # IP address pool for services.
    # Currently, we only support a single entry here.
    # This field is immutable after installation.
    serviceNetwork:
        - 10.43.0.0/16
    # The port range allowed for Services of type NodePort.
    # If not specified, the default of 30000-32767 will be used.
    # Such Services without a NodePort specified will have one
    # automatically allocated from this range.
    # This parameter can be updated after the cluster is
    # installed.
    serviceNodePortRange: 30000-32767
node:
    # If non-empty, will use this string to identify the node instead of the hostname
    hostnameOverride: ""
    # IP address of the node, passed to the kubelet.
    # If not specified, kubelet will use the node's default IP address.
    nodeIP: ""
    # IPv6 address of the node, passed to the kubelet. This parameter
    # is only allowed when dual stack deployment is configured.
    nodeIPv6: ""
# Storage represents a subfield of the MicroShift config data structure. Its purpose to provide a user
# facing interface to control whether MicroShift should deploy LVMS on startup.
storage:
    # Driver is a user defined string value matching one of the above CSIStorageDriver values. MicroShift uses this
    # value to decide whether to deploy the LVMS operator. An unset field defaults to "" during yaml parsing, and thus
    # could mean that the cluster has been upgraded. In order to support the existing out-of-box behavior, MicroShift
    # assumes an empty string to mean the storage driver should be deployed.
    # Allowed values are: unset or one of ["", "lvms", "none"]
    driver: ""
    # OptionalCSIComponents is a user defined slice of CSIComponent values. These value tell MicroShift which
    # additional, non-driver, CSI controllers to deploy on start. MicroShift will deploy snapshot controller
    # and webhook when no components are specified. This preserves the current deployment behavior of existing
    # clusters. Users must set `.storage.optionalCsiComponents: []` to explicitly tell MicroShift not to deploy any CSI
    # components. The CSI Driver is excluded as it is typically deployed via the same manifest as the accompanying
    # storage driver. Like CSIStorageDriver, uninstallation is not supported as this can lead to orphaned storage
    # objects.
    # Allowed values are: unset, [], or one or more of ["snapshot-controller"]
    # example:
    #   - snapshot-controller
    optionalCsiComponents: []

