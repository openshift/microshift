# Opentelemetry-collector.yaml provides a minimal set of metrics and logs for monitoring system, node, and
# workload resource usage for CPU, Memory, Disk, and Network. Included also are all cluster events of "Warning" type.

# This configuration exports:
# - Container, Pod, and Node metrics
# - Kubernetes Events (Warnings only)
# - Host's CPU, Mem, Disk, and Network Metrics
# - System journals for selected MicroShift services and dependencies, priority < Info

receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'all'
          scrape_interval: 1s
          metrics_path: /metrics
          authorization: { }
          kubernetes_sd_configs:
            - kubeconfig_file: /var/lib/resources/kubeadmin/
              role: node


  kubeletstats:
    auth_type: tls
    ca_file: /var/lib/microshift/certs/ca-bundle/client-ca.crt
    key_file: /var/lib/microshift/certs/admin-kubeconfig-signer/openshift-observability-client/client.key
    cert_file: /var/lib/microshift/certs/admin-kubeconfig-signer/openshift-observability-client/client.crt
    insecure_skip_verify: true
    collection_interval: 20s
    endpoint: "${env:K8S_NODE_NAME}:10250"
    node: ${env:K8S_NODE_NAME}
    k8s_api_config:
      auth_type: kubeConfig
  k8s_events:
    auth_type: kubeConfig
  hostmetrics:
    root_path: /
    collection_interval: 10s
    scrapers:
      cpu:
      memory:
      network:
      disk:
      filesystem:
  journald:
    units:
      - microshift
      - microshift-observability
      - microshift-etcd
      - crio
      - openvswitch.service
      - ovsdb-server.service
      - ovs-vswitchd.service
processors:
  batch:
  resourcedetection/system:
    detectors: [ "system" ]
    system:
      hostname_sources: [ "os" ]

exporters:
  otlp:
    sending_queue:
      storage: file_storage
    # Endpoint must point to an ip or hostname and port of an otlp service. Here, the K8S_NODE_NAME is used because it
    # will be resolved to the local node's hostname automatically. An unreachable endpoint will reported in the logs
    # of the microshift-observability service.
    endpoint: ${env:K8S_NODE_NAME}:4317
    tls:
      insecure: true

extensions:
  file_storage:
    directory: /var/lib/microshift-observability

service:
  extensions: [ file_storage ]
  pipelines:
    metrics/kubeletstats:
      receivers: [ kubeletstats ]
      processors: [ batch ]
      exporters: [ otlp ]
    metrics/hostmetrics:
      receivers: [ hostmetrics ]
      processors: [ resourcedetection/system, batch ]
      exporters: [ otlp ]
    logs/kube_events:
      receivers: [ k8s_events ]
      processors: [ resourcedetection/system, batch ]
      exporters: [ otlp ]
    logs/host:
      receivers: [ hostmetrics ]
      processors: [ resourcedetection/system ]
      exporters: [ otlp ]
    logs/journald:
      receivers: [ journald ]
      processors: [ resourcedetection/system ]
      exporters: [ otlp ]
  telemetry:
    metrics:
      readers:
        - periodic:
            exporter:
              otlp:
                # Endpoint must point to an ip or hostname and port of an otlp service. Here, the K8S_NODE_NAME is used
                # because it will be resolved to the local node's hostname automatically. An unreachable endpoint will
                # reported in the logs of the microshift-observability service.
                protocol: http/protobuf
                endpoint: http://${env:K8S_NODE_NAME}:4318